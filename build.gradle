plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'jacoco'
}

apply from: 'versions.gradle'

group = 'com.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

task checkstyle(type: Checkstyle) {
	configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
	source 'src/main/java'
	include '**/*.java'
	classpath = files()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.telegram:telegrambots:$telegrambotsVersion"

	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
	testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
	testImplementation "org.testcontainers:postgresql:$testContainersVersion"
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}

test {
	systemProperty 'spring.profiles.active', 'test'
	useJUnitPlatform()
	finalizedBy(jacocoTestReport)
}

task runDev {
	group = 'application'
	bootRun.configure {
		systemProperty "spring.profiles.active", 'dev'
	}
	finalizedBy bootRun
}